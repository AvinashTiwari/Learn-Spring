start mongod --dbpath F:\Mongo\1_MongoStateChange\fresh\data --replSet r1 --port 21700

Mongo --port 21700

rs.initiate()


> rs.initiate()
{
        "info2" : "no configuration specified. Using a default configuration for the set",
        "me" : "localhost:21700",
        "ok" : 1,
        "operationTime" : Timestamp(1557089270, 1),
        "$clusterTime" : {
                "clusterTime" : Timestamp(1557089270, 1),
                "signature" : {
                        "hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
                        "keyId" : NumberLong(0)
                }
        }
}
r1:SECONDARY>
r1:PRIMARY> db.demo.insert({x:1})
WriteResult({ "nInserted" : 1 })
r1:PRIMARY>

=======================

r1:PRIMARY> db.demo1.update({}, {$set:{x:1}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 0 })
r1:PRIMARY> db.demo1.update({}, {$set:{x:1}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 0 })
r1:PRIMARY> db.demo1.update({}, {$set:{x:2}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
r1:PRIMARY> db.demo1.insert({_id: 123, name: 'waldo' })
WriteResult({ "nInserted" : 1 })
r1:PRIMARY> db.demo1.update({_id:123})
2019-05-06T22:12:39.495-0600 E QUERY    [js] Error: need an object :
DBCollection.prototype._parseUpdate@src/mongo/shell/collection.js:452:1
DBCollection.prototype.update@src/mongo/shell/collection.js:494:18
@(shell):1:1
r1:PRIMARY> db.demo1.update({_id:123}, {justme:true})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
r1:PRIMARY> db.demo1.find({justMe:true})
r1:PRIMARY> db.demo1.find({justme:true})
{ "_id" : 123, "justme" : true }
r1:PRIMARY> db.demo1.find({justme:true})
{ "_id" : 123, "justme" : true }
r1:PRIMARY> db.demo1.update({_id:123}, {$set:{justme: true}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 0 })
r1:PRIMARY> db.demo1.update({_id:456},{$inc:{counter:1}}, {upsert:true})
WriteResult({ "nMatched" : 0, "nUpserted" : 1, "nModified" : 0, "_id" : 456 })
r1:PRIMARY> db.demo1.update({_id:456},{$inc:{counter:1}}, {upsert:true})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
r1:PRIMARY> db.demo1.remove({ counter: {$gte:0}})
WriteResult({ "nRemoved" : 1 })
r1:PRIMARY> db.demo1.insert({deleteMe:true})
WriteResult({ "nInserted" : 1 })
r1:PRIMARY> db.demo1.insert({deleteMe:true})
WriteResult({ "nInserted" : 1 })
r1:PRIMARY> db.demo1.insert({deleteMe:true})
WriteResult({ "nInserted" : 1 })
r1:PRIMARY> db.demo1.remove({deleteMe:true})
WriteResult({ "nRemoved" : 3 })
r1:PRIMARY> rs.initiate()

======================================
r1:PRIMARY> db.cart.insert({
...     "_id": 0,
...     "created": {
...         "$date": "2022-01-02T09:23:47"
...     },
...     "customer": {
...         "_id": 859882,
...         "name": "Ogg Reng",
...         "email": "og@example.io"
...     },
...     "shipTo": {
...         "street": "1989 Brick View",
...         "city": "Spharrsonville"
...     },
...     "items": [{
...             "sku": "E11",
...             "item": "Round cube",
...             "qty": 1
...         },
...         {
...             "sku": "M43",
...             "item": "Flat ripple",
...             "qty": 2
...         }
...     ],
...     "status": "complete",
...     "note": "Susop roak bovtuic ubu ubuludu imo denih givi jicfa con fewbopi amamul dunsubim bassalgi ivu wiuvopat iz watik. Dipma ikisieg zimmo vur deaddu ecserwew fuv jes zavek    kaevje sazfu wepe od opabibfob kocalohub cot. Gokwahbem heknodis ud cum ubovojali ip unuakivo viwil li ku wifih tez ma tiroco da azo fal. Jimon tohki se cu vicsub bafkin masiv su mawulho mavgi lonbanjed upe digkezog accejkut zatana. Ejji towar sa tiveomo azsibez zubis ulsama jivu lunez avacavaw nob kemawopu suruj. Bodijeha gadu te gaawa vuro topkol it fesa zevoca dejbil koj aviewomu laslaz johin gu pogartaz."
... })
WriteResult({ "nInserted" : 1 })
r1:PRIMARY> db.cart.insert({_id:0}, {$set: {status: 'shop'}})
WriteResult({
        "nInserted" : 0,
        "writeError" : {
                "code" : 11000,
                "errmsg" : "E11000 duplicate key error collection: test.cart index: _id_ dup key: { : 0.0 }"
        }
})
r1:PRIMARY> db.cart.update({_id:0}, {$set: {status: 'shop'}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
r1:PRIMARY> db.cart.update({_id:0}, {$unset: {'customer': true}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
r1:PRIMARY> db.cart.update({_id:0}, {$set: {updated: ISODate()}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
r1:PRIMARY> db.cart.update({_id:0}, {$set: {updated: ISODate()}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
r1:PRIMARY> db.cart.update({_id:0}, {$set: {customer: {"_id": 859882, "name" : "Avinash", email:"a@a.com"}}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
r1:PRIMARY>